name: Pull Request Review Process

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

  push:
    branches:
      - main   # Triggers the deployment when code is merged into `main`

jobs:
  add-reviewers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Check for assigned reviewers via CODEOWNERS
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          curl -s -H "Authorization: token $TOKEN" \
          "https://api.github.com/repos/${REPO}/pulls/${{ github.event.pull_request.number }}" | jq '.requested_reviewers'

  check-approval:
    runs-on: ubuntu-latest
    needs: add-reviewers  # Ensure this job runs after adding reviewers
    if: github.event.pull_request.merged == true  # Run only if the PR is merged
    steps:
    - name: Check for PR approval
      uses: actions/github-script@v6
      with:
        script: |
          const reviews = await github.pulls.listReviews({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
          });
          const approvals = reviews.data.filter(review => review.state === "APPROVED").length;
          if (approvals < 1) {
            throw new Error("PR has not been approved by required reviewers.");
          } else {
            console.log("PR approved by required reviewers.");
          }

  prod-deploy:
    runs-on: ubuntu-latest
    needs: check-approval  # Deploy only after the PR is approved
    if: github.event.pull_request.merged == true  # Ensure this runs only on merge
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install  # Or your appropriate build tool

    - name: Deploy to Production
      run: |
        echo "Deploying to production"