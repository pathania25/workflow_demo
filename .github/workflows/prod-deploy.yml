name: Deploy to Production

on:
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting the main branch

env:
  GITHUB_REVIEWERS: "pathania25,manasa-telus,ravicharan-nettyam"  # Define required reviewers as environment variables

jobs:
  check-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR reviewers
        env:
          # Get the pull request number from the GitHub context
          PR_NUMBER: ${{ github.event.pull_request.number }}
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          REPO: ${{ github.repository }}

        id: check_reviewers
        run: |

          # Fetch the pull request details
          response=$(curl -s -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${REPO}/pulls/${PR_NUMBER}")
          
          # Extract requested reviewers
          requested_reviewers=$(echo "$response" | jq -r '.requested_reviewers | map(.login) | .[]')

          # Convert the comma-separated GITHUB_REVIEWERS into an array
          IFS=',' read -r -a required_reviewers <<< "${GITHUB_REVIEWERS}"
          missing_reviewers=()

          # Check if required reviewers are present
          for reviewer in "${required_reviewers[@]}"; do
            if [[ ! " ${requested_reviewers[@]} " =~ " ${reviewer} " ]]; then
              missing_reviewers+=("$reviewer")
            fi
          done

          # Report missing reviewers
          if [ ${#missing_reviewers[@]} -ne 0 ]; then
            echo "The following required reviewers are missing: ${missing_reviewers[*]}"
            exit 1  # Fail the job if any required reviewers are not present
          else
            echo "All required reviewers are present."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-reviewers  # Ensure this job runs only after the reviewer check
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          echo "Setting up environment for production deployment"

      - name: Deploy to Production
        run: |
          echo "Deploying to production"

